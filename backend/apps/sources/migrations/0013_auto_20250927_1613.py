# Generated by Django 5.0.6 on 2025-09-27 16:13

from django.db import migrations

def create_periodic_task(apps, schema_editor):
    IntervalSchedule = apps.get_model('django_celery_beat', 'IntervalSchedule')
    PeriodicTask = apps.get_model('django_celery_beat', 'PeriodicTask')
    import json

    schedule, _ = IntervalSchedule.objects.get_or_create(
        every=24, period="hours"
    )

    PeriodicTask.objects.get_or_create(
            name="Fetch Youtube Videos",
            defaults={
                "interval": schedule,
                "task": "apps.sources.tasks.task_fetch_youtube_videos",
                "args": json.dumps([]),
            },
        )

    PeriodicTask.objects.get_or_create(
        name="Fetch YouTube Stats",
        defaults={
            "interval": schedule,
            "task": "apps.sources.tasks.task_fetch_youtube_stats",
            "args": json.dumps([]),
        },
    )

    PeriodicTask.objects.get_or_create(
        name="Fetch TikTok Videos",
        defaults={
            "interval": schedule,
            "task": "apps.sources.tasks.task_fetch_tiktok_videos",
            "args": json.dumps([]),
        },
    )

    PeriodicTask.objects.get_or_create(
        name="Fetch TikTok Stats",
        defaults={
            "interval": schedule,
            "task": "apps.sources.tasks.task_fetch_tiktok_stats",
            "args": json.dumps([]),
        },
    )

    PeriodicTask.objects.get_or_create(
        name="Fetch Twitch Videos",
        defaults={
            "interval": schedule,
            "task": "apps.sources.tasks.task_fetch_twitch_videos",
            "args": json.dumps([]),
        },
    )

    PeriodicTask.objects.get_or_create(
        name="Fetch Twitch Stats",
        defaults={
            "interval": schedule,
            "task": "apps.sources.tasks.task_fetch_twitch_stats",
            "args": json.dumps([]),
        },
    )

    PeriodicTask.objects.get_or_create(
        name="Fetch Vimeo Videos and Stats",
        defaults={
            "interval": schedule,
            "task": "apps.sources.tasks.task_fetch_vimeo_videos_and_stats",
            "args": json.dumps([]),
        },
    )

    PeriodicTask.objects.get_or_create(
        name="Fetch Instagram Stats",
        defaults={
            "interval": schedule,
            "task": "apps.sources.tasks.task_fetch_instagram_videos",
            "args": json.dumps([]),
        },
    )
    

    PeriodicTask.objects.get_or_create(
        name="Fetch Instagram Stats",
        defaults={
            "interval": schedule,
            "task": "apps.sources.tasks.task_fetch_instagram_stats",
            "args": json.dumps([]),
        },
    )


class Migration(migrations.Migration):

    dependencies = [
        ('sources', '0012_alter_source_platform'),
    ]

    operations = [
         migrations.RunPython(create_periodic_task),
    ]
